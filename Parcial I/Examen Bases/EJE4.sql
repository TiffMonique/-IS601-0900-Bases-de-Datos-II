
/*4) Crear una tabla llamada REGISTRO_LOGS que tenga los campos ID_LOG NUMBER,
FECHA_LOG TIMESTAMP, DESCRIPCION_LOG VARCHAR2(500), USUARIO
VARCHAR2(50), TIPO_OPERACION VARCHAR2(20), TABLA_AFECTADA
VARCHAR2(30). El campo ID_LOG debe guardar valores secuenciales gestionados
mediante un Trigger y se deben aumentar de 5 en 5. El campo TIPO_OPERACION
guardará si la operación fue un INSERT, DELETE o UPDATE. Por último, crear tres
Triggers, uno en la tabla EMPLOYEES que se ejecute después de realizar un INSERT y
otro en la tabla DEPARTMENTS que se ejecute antes de realizar un UPDATE y el último
trigger en la tabla JOB_HISTORY que se ejecute después de realizar un DELETE. Todos
los triggers deben guardar la información en la tabla REGISTRO_LOGS de las
operaciones de inserción, actualización o delete. (valor 20%)*/

--CREACION DE TABLA
CREATE TABLE REGISTRO_LOGS(
    ID_LOG NUMBER PRIMARY KEY,
    DESCRIPCION_LOG VARCHAR2(500),
    FECHA_LOG TIMESTAMP,
    USUARIO VARCHAR2(50),
    TIPO_OPERACION VARCHAR2(20),
    TABLA_AFECTADA VARCHAR2(30)
);


--SECUENCIA
CREATE SEQUENCE SQ_LOGS_20181002925
START WITH 1
INCREMENT BY 5;


--TRIGGER TABLA EMPLOYEES DESPUES DE INSERT
CREATE OR REPLACE TRIGGER TG_EMPLO_20181002925
AFTER INSERT ON EMPLOYEES
FOR EACH ROW
BEGIN
    INSERT INTO REGISTRO_LOGS VALUES(SQ_LOGS_20181002925.NEXTVAL, 'SE REALIZO UN INSERT EN LA TABLA EMPLOYEES Y EL DATO NUEVO EN EL ID ES: '||:NEW.EMPLOYEE_ID||' Y EL NOMBRE ES: '||
                                :NEW.FIRST_NAME, SYSTIMESTAMP, USER, 'OPERACION INSERT', 'EMPLOYEES');
END;


--PROBANDO EL FUNCIONAMIENTO DEL TRIGGER
INSERT INTO EMPLOYEES VALUES(SQ_EMPLO_20181002925.NEXTVAL, 'LAURA','Perez', 'lAURITA@gmail.com', '515.123.5555','21-SEP-89' , 'AD_PRES', 9000, 0.3,100, 90);
commit;

--TRIGGER TABLA DEPARTMENTS ANTES DE update
CREATE OR REPLACE TRIGGER TG_DEPTO_20181002925
BEFORE UPDATE ON DEPARTMENTS
FOR EACH ROW
BEGIN
    INSERT INTO REGISTRO_LOGS VALUES(SQ_LOGS_20181002925.NEXTVAL, 'SE REALIZO UN UPDATE EN LA TABLA DEPARTMENTS Y EL DATO NUEVO EN EL ID ES: '||:NEW.DEPARTMENT_ID||' Y EL NOMBRE ES: '||
                                :NEW.DEPARTMENT_NAME, SYSTIMESTAMP, USER, 'OPERACION UPDATE', 'DEPARTMENTS');
END;

 
--PROBANDO EL FUNCIONAMIENTO DEL TRIGGER CON UN UPDATE

BEGIN
    UPDATE DEPARTMENTS SET DEPARTMENT_NAME='OLANCHOs' WHERE DEPARTMENT_NAME='OLANCHO';
    COMMIT;
    
END;


--TRIGGER TABLA DEPARTMENTS ANTES DE INSERT
CREATE OR REPLACE TRIGGER TG_JOBH_20181002925
AFTER DELETE ON JOB_HISTORY
FOR EACH ROW
BEGIN
    INSERT INTO REGISTRO_LOGS VALUES(SQ_LOGS_20181002925.NEXTVAL, 'SE REALIZO UN DELETE EN LA TABLA DEPARTMENTS Y EL DATO EN EL ID ERA: '||:OLD.EMPLOYEE_ID,
                                    SYSTIMESTAMP, USER, 'OPERACION DELETE', 'DEPARTMENTS');
END;


--PROBANDO EL FUNCIONAMIENTO DEL TRIGGER CON UN DELETE…
BEGIN
    DELETE  FROM JOB_HISTORY WHERE EMPLOYEE_ID=101;
    COMMIT;
    
END;